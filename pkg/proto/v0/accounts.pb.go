// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accounts.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Payload              *Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Record) GetPayload() *Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Payload struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{1}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type Account struct {
	StandardClaims       *StandardClaims `protobuf:"bytes,1,opt,name=standard_claims,json=standardClaims,proto3" json:"standard_claims,omitempty"`
	Identities           []*IdHistory    `protobuf:"bytes,2,rep,name=identities,proto3" json:"identities,omitempty"`
	Issuer               string          `protobuf:"bytes,3,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
	Password             string          `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{2}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetStandardClaims() *StandardClaims {
	if m != nil {
		return m.StandardClaims
	}
	return nil
}

func (m *Account) GetIdentities() []*IdHistory {
	if m != nil {
		return m.Identities
	}
	return nil
}

func (m *Account) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// OIDC standard claims https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
type StandardClaims struct {
	Sub                  string   `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            string   `protobuf:"bytes,3,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           string   `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	MiddleName           string   `protobuf:"bytes,5,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Nickname             string   `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PreferredUsername    string   `protobuf:"bytes,7,opt,name=preferred_username,json=preferredUsername,proto3" json:"preferred_username,omitempty"`
	Profile              string   `protobuf:"bytes,8,opt,name=profile,proto3" json:"profile,omitempty"`
	Picture              string   `protobuf:"bytes,9,opt,name=picture,proto3" json:"picture,omitempty"`
	Website              string   `protobuf:"bytes,10,opt,name=website,proto3" json:"website,omitempty"`
	Email                string   `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified        bool     `protobuf:"varint,12,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Gender               string   `protobuf:"bytes,13,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            string   `protobuf:"bytes,14,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Zoneinfo             string   `protobuf:"bytes,15,opt,name=zoneinfo,proto3" json:"zoneinfo,omitempty"`
	Locale               string   `protobuf:"bytes,16,opt,name=locale,proto3" json:"locale,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,17,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneNumberVerified  bool     `protobuf:"varint,18,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Address              *Address `protobuf:"bytes,20,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardClaims) Reset()         { *m = StandardClaims{} }
func (m *StandardClaims) String() string { return proto.CompactTextString(m) }
func (*StandardClaims) ProtoMessage()    {}
func (*StandardClaims) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{3}
}

func (m *StandardClaims) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardClaims.Unmarshal(m, b)
}
func (m *StandardClaims) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardClaims.Marshal(b, m, deterministic)
}
func (m *StandardClaims) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardClaims.Merge(m, src)
}
func (m *StandardClaims) XXX_Size() int {
	return xxx_messageInfo_StandardClaims.Size(m)
}
func (m *StandardClaims) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardClaims.DiscardUnknown(m)
}

var xxx_messageInfo_StandardClaims proto.InternalMessageInfo

func (m *StandardClaims) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *StandardClaims) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StandardClaims) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *StandardClaims) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *StandardClaims) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *StandardClaims) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *StandardClaims) GetPreferredUsername() string {
	if m != nil {
		return m.PreferredUsername
	}
	return ""
}

func (m *StandardClaims) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *StandardClaims) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *StandardClaims) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *StandardClaims) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *StandardClaims) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *StandardClaims) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *StandardClaims) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *StandardClaims) GetZoneinfo() string {
	if m != nil {
		return m.Zoneinfo
	}
	return ""
}

func (m *StandardClaims) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *StandardClaims) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *StandardClaims) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *StandardClaims) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *StandardClaims) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type Address struct {
	Formatted            string   `protobuf:"bytes,1,opt,name=formatted,proto3" json:"formatted,omitempty"`
	StreetAddress        string   `protobuf:"bytes,2,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	Locality             string   `protobuf:"bytes,3,opt,name=locality,proto3" json:"locality,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	PostalCode           string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{4}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetFormatted() string {
	if m != nil {
		return m.Formatted
	}
	return ""
}

func (m *Address) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *Address) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type IdHistory struct {
	Sub                  string   `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Iss                  string   `protobuf:"bytes,2,opt,name=iss,proto3" json:"iss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdHistory) Reset()         { *m = IdHistory{} }
func (m *IdHistory) String() string { return proto.CompactTextString(m) }
func (*IdHistory) ProtoMessage()    {}
func (*IdHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{5}
}

func (m *IdHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdHistory.Unmarshal(m, b)
}
func (m *IdHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdHistory.Marshal(b, m, deterministic)
}
func (m *IdHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdHistory.Merge(m, src)
}
func (m *IdHistory) XXX_Size() int {
	return xxx_messageInfo_IdHistory.Size(m)
}
func (m *IdHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_IdHistory.DiscardUnknown(m)
}

var xxx_messageInfo_IdHistory proto.InternalMessageInfo

func (m *IdHistory) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *IdHistory) GetIss() string {
	if m != nil {
		return m.Iss
	}
	return ""
}

type Phoenix struct {
	Theme                string   `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Phoenix) Reset()         { *m = Phoenix{} }
func (m *Phoenix) String() string { return proto.CompactTextString(m) }
func (*Phoenix) ProtoMessage()    {}
func (*Phoenix) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{6}
}

func (m *Phoenix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phoenix.Unmarshal(m, b)
}
func (m *Phoenix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phoenix.Marshal(b, m, deterministic)
}
func (m *Phoenix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phoenix.Merge(m, src)
}
func (m *Phoenix) XXX_Size() int {
	return xxx_messageInfo_Phoenix.Size(m)
}
func (m *Phoenix) XXX_DiscardUnknown() {
	xxx_messageInfo_Phoenix.DiscardUnknown(m)
}

var xxx_messageInfo_Phoenix proto.InternalMessageInfo

func (m *Phoenix) GetTheme() string {
	if m != nil {
		return m.Theme
	}
	return ""
}

// Used to fetch exactly one user. The conditions are optional. If set, all have to be true.
type GetRequest struct {
	// Used to look up user by the oidc sub and iss
	Identity *IdHistory `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Used to look up the user by our internal uuid
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Used to authenticate users using basic auth
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Used as a fallback mechanism in case sub or iss changed for an existing user
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{7}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetIdentity() *IdHistory {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *GetRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GetRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Query struct {
	// Optional. The maximum number of accounts to return in the response.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. A pagination token returned from a previous call to `Get`
	// that indicates from where search should continue.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Search criteria used to select the Accounts to return.
	// If no search criteria is specified then all accounts will be
	// returned.
	//
	// Query expressions can be used to restrict results based upon the standard claims,
	// iss, and uuid where the operators `=`, `NOT`, `AND` and `OR`
	// can be used along with the suffix wildcard symbol `*`.
	//
	// The *_name claims in a query expression should use escaped quotes
	// for values that include whitespace to prevent unexpected behavior.
	//
	// Some example queries are:
	//
	// * Query `name=Th*` returns accounts whose name claim
	// starts with "Th".
	// * Query `email=foo@example.com` returns accounts with
	// `email` set to `foo@example.com`.
	// * Query `address/country=de` returns accounts that have
	// an address in Germany
	// * Query `name=\\"Test String\\"` returns accounts with
	// display names that include both "Test" and "String".
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{8}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *Query) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *Query) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Records struct {
	// A possibly paginated accounts search result for
	// the specified query.
	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	// A pagination token returned from a previous call to `Search`
	// that indicates from where searching should continue.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}
func (*Records) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1e7723af4c007b7, []int{9}
}

func (m *Records) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Records.Unmarshal(m, b)
}
func (m *Records) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Records.Marshal(b, m, deterministic)
}
func (m *Records) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Records.Merge(m, src)
}
func (m *Records) XXX_Size() int {
	return xxx_messageInfo_Records.Size(m)
}
func (m *Records) XXX_DiscardUnknown() {
	xxx_messageInfo_Records.DiscardUnknown(m)
}

var xxx_messageInfo_Records proto.InternalMessageInfo

func (m *Records) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *Records) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Record)(nil), "settings.Record")
	proto.RegisterType((*Payload)(nil), "settings.Payload")
	proto.RegisterType((*Account)(nil), "settings.Account")
	proto.RegisterType((*StandardClaims)(nil), "settings.StandardClaims")
	proto.RegisterType((*Address)(nil), "settings.Address")
	proto.RegisterType((*IdHistory)(nil), "settings.IdHistory")
	proto.RegisterType((*Phoenix)(nil), "settings.Phoenix")
	proto.RegisterType((*GetRequest)(nil), "settings.GetRequest")
	proto.RegisterType((*Query)(nil), "settings.Query")
	proto.RegisterType((*Records)(nil), "settings.Records")
}

func init() { proto.RegisterFile("accounts.proto", fileDescriptor_e1e7723af4c007b7) }

var fileDescriptor_e1e7723af4c007b7 = []byte{
	// 882 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0x4b, 0x6f, 0x1b, 0x37,
	0x10, 0xc6, 0x46, 0xd6, 0x6b, 0x14, 0x4b, 0x36, 0xed, 0x16, 0x84, 0xd0, 0xc0, 0xea, 0x02, 0x2d,
	0xd4, 0x47, 0xac, 0xc2, 0x01, 0x7a, 0xe9, 0xc9, 0xc9, 0xc1, 0xcd, 0x25, 0x70, 0x57, 0x6d, 0x0f,
	0x05, 0x8a, 0x05, 0xb5, 0x1c, 0x49, 0x84, 0x57, 0xcb, 0x0d, 0xc9, 0x55, 0x22, 0xff, 0x93, 0x9e,
	0xfa, 0x2b, 0x7a, 0xec, 0x7f, 0xe9, 0xef, 0xe8, 0x29, 0xe0, 0x63, 0x57, 0x7e, 0x9d, 0xc4, 0xef,
	0xc1, 0xe1, 0x70, 0x76, 0x86, 0x82, 0x21, 0xcb, 0x32, 0x59, 0x15, 0x46, 0x9f, 0x97, 0x4a, 0x1a,
	0x49, 0x7a, 0x1a, 0x8d, 0x11, 0xc5, 0x4a, 0x8f, 0xcf, 0x56, 0x52, 0xae, 0x72, 0x9c, 0xb1, 0x52,
	0xcc, 0x96, 0x02, 0x73, 0x9e, 0x2e, 0x70, 0xcd, 0xb6, 0x42, 0x2a, 0x6f, 0x8d, 0xaf, 0xa0, 0x93,
	0x60, 0x26, 0x15, 0x27, 0x47, 0xd0, 0xba, 0xc1, 0x1d, 0x8d, 0x26, 0xd1, 0xb4, 0x9f, 0xd8, 0x25,
	0xf9, 0x0e, 0xba, 0x25, 0xdb, 0xe5, 0x92, 0x71, 0xfa, 0x6c, 0x12, 0x4d, 0x07, 0x17, 0xc7, 0xe7,
	0x75, 0xe0, 0xf3, 0x6b, 0x2f, 0x24, 0xb5, 0x23, 0xfe, 0x11, 0xba, 0x81, 0xb3, 0xfb, 0x42, 0x42,
	0x2e, 0xda, 0xbd, 0x7d, 0x97, 0x5e, 0x48, 0x6a, 0x47, 0xfc, 0x4f, 0x04, 0xdd, 0x40, 0x92, 0x4b,
	0x18, 0x69, 0xc3, 0x0a, 0xce, 0x14, 0x4f, 0xb3, 0x9c, 0x89, 0x8d, 0x0e, 0x01, 0xe8, 0x3e, 0xc0,
	0x3c, 0x18, 0xde, 0x38, 0x3d, 0x19, 0xea, 0x7b, 0x98, 0xbc, 0x02, 0x10, 0x1c, 0x0b, 0x23, 0x8c,
	0x40, 0x4d, 0x9f, 0x4d, 0x5a, 0xd3, 0xc1, 0xc5, 0xc9, 0x7e, 0xf7, 0x5b, 0xfe, 0xb3, 0xd0, 0x46,
	0xaa, 0x5d, 0x72, 0xc7, 0x46, 0x3e, 0x87, 0xce, 0x5b, 0xad, 0x2b, 0x54, 0xb4, 0xe5, 0x6e, 0x1f,
	0x10, 0x19, 0x43, 0xef, 0x9a, 0x69, 0xfd, 0x41, 0x2a, 0x4e, 0x0f, 0x9c, 0xd2, 0xe0, 0xf8, 0xff,
	0x03, 0x18, 0xde, 0xcf, 0xc5, 0x56, 0x50, 0x57, 0x8b, 0xba, 0x82, 0xba, 0x5a, 0x10, 0x02, 0x07,
	0x05, 0xdb, 0xa0, 0x2b, 0x5f, 0x3f, 0x71, 0x6b, 0xf2, 0x02, 0x60, 0x25, 0xb6, 0x58, 0xa4, 0x4e,
	0xf1, 0x07, 0xf6, 0x1d, 0xf3, 0xce, 0xca, 0x67, 0x30, 0x58, 0xb2, 0x8d, 0xc8, 0x77, 0x5e, 0xf7,
	0xc7, 0x82, 0xa7, 0x6a, 0xc3, 0x46, 0x70, 0x9e, 0xa3, 0x37, 0xb4, 0xbd, 0xc1, 0x53, 0xce, 0x30,
	0x86, 0x5e, 0x21, 0xb2, 0x1b, 0xa7, 0x76, 0x7c, 0xd6, 0x35, 0x26, 0x2f, 0x81, 0x94, 0x0a, 0x97,
	0xa8, 0x14, 0xf2, 0xb4, 0xd2, 0xa8, 0x9c, 0xab, 0xeb, 0x5c, 0xc7, 0x8d, 0xf2, 0x5b, 0x10, 0x08,
	0x85, 0x6e, 0xa9, 0xe4, 0x52, 0xe4, 0x48, 0x7b, 0xce, 0x53, 0x43, 0xa7, 0x88, 0xcc, 0x54, 0x0a,
	0x69, 0x3f, 0x28, 0x1e, 0x5a, 0xe5, 0x03, 0x2e, 0xb4, 0x30, 0x48, 0xc1, 0x2b, 0x01, 0x92, 0x53,
	0x68, 0xe3, 0x86, 0x89, 0x9c, 0x0e, 0x1c, 0xef, 0x01, 0xf9, 0x0a, 0x86, 0x6e, 0x91, 0x6e, 0x51,
	0x89, 0xa5, 0x40, 0x4e, 0x9f, 0x4f, 0xa2, 0x69, 0x2f, 0x39, 0x74, 0xec, 0xef, 0x81, 0xb4, 0xdf,
	0x68, 0x85, 0x05, 0x47, 0x45, 0x0f, 0xfd, 0x37, 0xf2, 0x88, 0x7c, 0x01, 0xfd, 0x85, 0x50, 0x66,
	0xcd, 0x99, 0x41, 0x3a, 0xf4, 0xd5, 0x6c, 0x08, 0x5b, 0x8b, 0x5b, 0x59, 0xa0, 0x28, 0x96, 0x92,
	0x8e, 0x7c, 0x2d, 0x6a, 0x6c, 0x23, 0xe6, 0x32, 0x63, 0x39, 0xd2, 0x23, 0x1f, 0xd1, 0x23, 0xf2,
	0x25, 0x3c, 0x2f, 0xd7, 0xb2, 0xc0, 0xb4, 0xa8, 0x36, 0x0b, 0x54, 0xf4, 0xd8, 0xa9, 0x03, 0xc7,
	0xbd, 0x73, 0x14, 0xb9, 0x80, 0xcf, 0xee, 0x5a, 0xf6, 0xa9, 0x13, 0x97, 0xfa, 0xc9, 0x1d, 0x6f,
	0x73, 0x81, 0x17, 0x00, 0x55, 0x69, 0x93, 0xe2, 0x29, 0x33, 0xf4, 0x64, 0x12, 0x4d, 0xdb, 0x49,
	0x3f, 0x30, 0x97, 0xc6, 0x0d, 0x0d, 0xe7, 0x0a, 0xb5, 0xa6, 0xa7, 0x8f, 0x86, 0xc6, 0x0b, 0x49,
	0xed, 0x88, 0xff, 0xb5, 0x43, 0xe3, 0xd7, 0xb6, 0x00, 0x4b, 0xa9, 0x36, 0xcc, 0x18, 0xe4, 0xa1,
	0xf7, 0xf6, 0x84, 0xad, 0xae, 0x36, 0x0a, 0xd1, 0xa4, 0x75, 0x74, 0xdf, 0x8b, 0x87, 0x9e, 0xad,
	0x83, 0x8c, 0xa1, 0xe7, 0x6e, 0x2f, 0xcc, 0x2e, 0xb4, 0x64, 0x83, 0x6d, 0x9d, 0x14, 0xae, 0x84,
	0x2c, 0x42, 0x33, 0x06, 0x64, 0x1b, 0xb1, 0x94, 0xda, 0xb0, 0x3c, 0xcd, 0x24, 0x6f, 0x1a, 0xd1,
	0x53, 0x6f, 0x24, 0x77, 0x9d, 0xe0, 0xe6, 0x5a, 0xed, 0x42, 0x1f, 0xd6, 0x30, 0x9e, 0x41, 0xbf,
	0x99, 0xc4, 0x27, 0xc6, 0xe6, 0x08, 0x5a, 0xa2, 0xc9, 0xd4, 0x2e, 0xe3, 0x33, 0xe8, 0x5e, 0xaf,
	0x25, 0x16, 0xe2, 0xa3, 0xed, 0x22, 0xb3, 0xc6, 0x0d, 0x86, 0x0d, 0x1e, 0xc4, 0x7f, 0x47, 0x00,
	0x57, 0x68, 0x12, 0x7c, 0x5f, 0xa1, 0x36, 0x64, 0x06, 0xbd, 0x30, 0xdf, 0xbb, 0xf0, 0x84, 0x3c,
	0xf9, 0x08, 0x34, 0x26, 0x3b, 0xa9, 0x55, 0x25, 0x78, 0x3d, 0xa9, 0x76, 0x6d, 0x8b, 0xd2, 0x8c,
	0x48, 0x28, 0x4a, 0x8d, 0xad, 0x56, 0x3e, 0x78, 0x1a, 0x6a, 0xbc, 0xef, 0xf3, 0xf6, 0x9d, 0x3e,
	0x8f, 0x33, 0x68, 0xff, 0x52, 0xa1, 0xda, 0x91, 0x09, 0xf4, 0x4b, 0xb6, 0xc2, 0x54, 0x8b, 0x5b,
	0x7f, 0x89, 0xf6, 0xeb, 0xd6, 0x7f, 0x97, 0x91, 0x0d, 0xb0, 0xc2, 0xb9, 0xb8, 0x45, 0x12, 0x03,
	0x38, 0x87, 0x91, 0x37, 0x58, 0xf8, 0x94, 0xbc, 0xc5, 0x6d, 0xfc, 0xd5, 0xb2, 0xf6, 0x90, 0xf7,
	0x36, 0x5c, 0xc8, 0xcc, 0x83, 0xf8, 0x4f, 0xe8, 0xfa, 0xe7, 0x5c, 0x93, 0x6f, 0xa1, 0xab, 0xfc,
	0x92, 0x46, 0xee, 0x19, 0x3c, 0xda, 0x57, 0xc0, 0x7b, 0x92, 0xda, 0x40, 0xbe, 0x86, 0x51, 0x81,
	0x1f, 0x4d, 0xfa, 0xf0, 0xd4, 0xe4, 0xd0, 0xd2, 0xd7, 0xf5, 0xa1, 0x17, 0x7f, 0x45, 0x30, 0x0a,
	0x8f, 0xb5, 0x9e, 0xa3, 0xda, 0x8a, 0x0c, 0xc9, 0x37, 0xd0, 0x9a, 0xa3, 0x21, 0x8f, 0xa2, 0x8f,
	0x1f, 0x31, 0xe4, 0x25, 0xb4, 0xae, 0xd0, 0x90, 0xd3, 0xbd, 0xb0, 0xff, 0x64, 0x4f, 0xd8, 0xbf,
	0x87, 0xce, 0x1c, 0x99, 0xca, 0xd6, 0x64, 0xb4, 0xd7, 0x5c, 0x0d, 0xc7, 0xc7, 0x0f, 0xcd, 0xfa,
	0xf5, 0xe9, 0x1f, 0xa4, 0xbc, 0x59, 0xcd, 0xdc, 0xdf, 0xda, 0x6c, 0xfb, 0xc3, 0x4f, 0x6e, 0xb1,
	0xe8, 0xb8, 0x9f, 0x57, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x02, 0xb9, 0x9c, 0x08, 0x23, 0x07,
	0x00, 0x00,
}
