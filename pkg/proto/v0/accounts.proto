syntax = "proto3";

option go_package = "pkg/proto/v0;proto";

package settings;

import "google/api/field_behavior.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

// Follow recommended Methods for rpc APIs https://cloud.google.com/apis/design/resources?hl=de#methods
// https://cloud.google.com/apis/design/standard_methods?hl=de#list
// https://cloud.google.com/apis/design/naming_convention?hl=de
service AccountsService {
    // Lists accounts
    rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
        // List method maps to HTTP GET
        option (google.api.http) = {
            get: "/v0/accounts"
        };
    }
    // Gets an account
    rpc GetAccount(GetAccountRequest) returns (Account) {
        option (google.api.http) = {
            get: "/v0/accounts/{id=*}"
            body: "*"
        };
    }
    // Creates an account
    rpc CreateAccount(CreateAccountRequest) returns (Account) {
        // Create maps to HTTP POST. URL path as the collection name.
        // HTTP request body contains the resource
        option (google.api.http) = {
            post: "/v0/accounts"
            body: "account"
        };
    }
    // Updates an account
    rpc UpdateAccount(UpdateAccountRequest) returns (Account) {
        // Update maps to HTTP PATCH. Resource name is mapped to a URL path.
        // Resource is contained in the HTTP request body
        option (google.api.http) = {
            patch: "/v0/accounts/{account.id=*}"
            body: "account"
        };
    };
    // Deletes an account
    rpc DeleteAccount(DeleteAccountRequest) returns (google.protobuf.Empty) {
        // Delete maps to HTTP DELETE. Resource name maps to the URL path.
        // There is no request body
        option (google.api.http) = {
            delete: "/v0/accounts/{id=*}"
        };
    }
}

service GroupsService {
    // Lists groups
    rpc ListGroups(ListGroupsRequest) returns (ListGroupsResponse) {
        // List method maps to HTTP GET
        option (google.api.http) = {
            get: "/v0/groups"
        };
    }
    // Gets an groups
    rpc GetGroup(GetGroupRequest) returns (Group) {
        option (google.api.http) = {
            get: "/v0/groups/{id=*}"
            body: "*"
        };
    }
    // Creates a group
    rpc CreateGroup(CreateGroupRequest) returns (Group) {
        // Create maps to HTTP POST. URL path as the collection name.
        // HTTP request body contains the resource
        option (google.api.http) = {
            post: "/v0/groups"
            body: "group"
        };
    }
    // Updates a group
    rpc UpdateGroup(UpdateGroupRequest) returns (Group) {
        // Update maps to HTTP PATCH. Resource name is mapped to a URL path.
        // Resource is contained in the HTTP request body
        option (google.api.http) = {
            patch: "/v0/groups/{group.id=*}"
            body: "group"
        };
    };
    // Deletes a group
    rpc DeleteGroup(DeleteGroupRequest) returns (google.protobuf.Empty) {
        // Delete maps to HTTP DELETE. Resource name maps to the URL path.
        // There is no request body
        option (google.api.http) = {
            delete: "/v0/groups/{id=*}"
        };
    }

    // additional group methods: https://docs.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#methods

    // references are accessed using $ref, see http://docs.oasis-open.org/odata/odata/v4.0/cs01/part2-url-conventions/odata-v4.0-cs01-part2-url-conventions.html#_Toc365046422
    // or the stack overflow question https://stackoverflow.com/questions/49362894/why-is-the-microsoft-graph-api-using-ref-in-the-uri

    // group:addmember https://docs.microsoft.com/en-us/graph/api/group-post-members?view=graph-rest-1.0&tabs=http
    rpc AddMember(AddMemberRequest) returns (Group) {
        //  All request parameters go into body.
        option (google.api.http) = {
            post: "/v0/groups/{id=*}/members/$ref"
            body: "*"
        };
    }
    // group:removemember https://docs.microsoft.com/en-us/graph/api/group-delete-members?view=graph-rest-1.0
    rpc RemoveMember(RemoveMemberRequest) returns (Group) {
        //  All request parameters go into body.
        option (google.api.http) = {
            delete: "/v0/groups/{id=*}/members/{account.id}/$ref"
            body: "*"
        };
    }
    // group:listmembers https://docs.microsoft.com/en-us/graph/api/group-list-members?view=graph-rest-1.0
    rpc ListMembers(ListMembersRequest) returns (ListMembersResponse) {
        //  All request parameters go into body.
        option (google.api.http) = {
            get: "/v0/groups/{id=*}/members/$ref"
        };
    }

}

message ListAccountsRequest {
    // Optional. The maximum number of accounts to return in the response
    uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

    // Optional. A pagination token returned from a previous call to `Get`
    // that indicates from where search should continue
    string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

    // Optional. Used to specify a subset of fields that should be
    // returned by a get operation or modified by an update operation.
    google.protobuf.FieldMask field_mask = 3;

    // Optional. Search criteria used to select the accounts to return.
    // If no search criteria is specified then all accounts will be
    // returned
    //
    // TODO update query language
    // Query expressions can be used to restrict results based upon
    // the account properties where the operators `=`, `NOT`, `AND` and `OR`
    // can be used along with the suffix wildcard symbol `*`.
    //
    // The string properties in a query expression should use escaped quotes
    // for values that include whitespace to prevent unexpected behavior.
    //
    // Some example queries are:
    //
    // * Query `display_name=Th*` returns accounts whose display_name
    // starts with "Th"
    // * Query `email=foo@example.com` returns accounts with
    // `email` set to `foo@example.com`
    // * Query `display_name=\\"Test String\\"` returns accounts with
    // display names that include both "Test" and "String"
    string query = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListAccountsResponse {
    // The field name should match the noun "accounts" in the method name.  There
    // will be a maximum number of items returned based on the page_size field
    // in the request
    repeated Account accounts = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list
    string next_page_token = 2;
}

message GetAccountRequest {
    string id = 1;

    // Optional. Used to specify a subset of fields that should be
    // returned by a get operation or modified by an update operation.
    google.protobuf.FieldMask field_mask = 2;
}

message CreateAccountRequest {
    // The account id to use for this account
    string id = 1;

    // The account resource to create
    Account account = 2;
}

message UpdateAccountRequest {
    // The account resource which replaces the resource on the server
    Account account = 1;

    // The update mask applies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;
  }

message DeleteAccountRequest {
    string id = 1;
}

message Account {

    // Note that field numbers in the range 1 through 15 take one byte to encode, including the field number and the field's type

    // The unique identifier for the account.
    // Key. Not nullable. Non reassignable. Read-only.
    string id = 1;

    // The name displayed in places where spaces are allowed.
    // This is usually the combination of the users's first name, middle initial and last name.
    // POSIX does not allow whitespace in username, so we use `username` there
    // Corresponds to LDAP:
    // - cn
    string display_name = 2;

    // We keep track of the given name and surname, to be able to search them individually

    // The given name (first name) of the user.
    // Corresponds to LDAP:
    // - givenName
    string given_name = 3;

    // The user's surname (family name or last name)
    // Corresponds to LDAP:
    // - sn
    string surname = 4;

    // The shorthand username, used for login and display in POSIX systems
    // Corresponds to LDAP:
    // - posixaccount MUST uid
    // - (AD) User MAY samaccountname (limited to 20 chars)
    // Not nullable. Reassignable.
    string username = 5;

    // Specifies the password for the account.
    // Corresponds to LDAP:
    // - posixaccount MAY authPassword
    // Write-only.
    string password = 6;

    // The numeric user id. Used for exposing the account using ldap to POSIX systems
    // Corresponds to LDAP:
    // - posixaccount MUST uidnumber
    // Not nullable.
    int64 uid = 7;

    // The primary group id. Used for exposing the account using ldap to POSIX systems
    // Corresponds to LDAP:
    // - posixaccount MUST gidnumber
    // Not nullable.
    int64 gid = 8;

    // The SMTP address for the account, for example, "einstein@example.org".
    // Corresponds to LDAP:
    // - inetorgperson MAY mail
    string mail = 9;

    // A description, useful for resource accounts
    // Corresponds to LDAP:
    // - posixaccount MAY description
    string description = 10;

    // The groups, directory roles and administrative units that the account is a member of. Read-only. Nullable.
    // should we only respond with repeated strings of ids? no clients should a proper filter mask!

    // Corresponds to LDAP:
    // -
    repeated Group member_of = 11;

    // Field numbers in the range 16 through 2047 take two bytes. So you should reserve the field numbers 1 through 15 for very frequently occurring message elements. Remember to leave some room for frequently occurring elements that might be added in the future.

}

message ListGroupsRequest {
    // Optional. The maximum number of groups to return in the response
    uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

    // Optional. A pagination token returned from a previous call to `Get`
    // that indicates from where search should continue
    string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

    // Optional. Used to specify a subset of fields that should be
    // returned by a get operation or modified by an update operation.
    google.protobuf.FieldMask field_mask = 3;

    // Optional. Search criteria used to select the groups to return.
    // If no search criteria is specified then all groups will be
    // returned
    //
    // TODO update query language
    // Query expressions can be used to restrict results based upon
    // the account properties where the operators `=`, `NOT`, `AND` and `OR`
    // can be used along with the suffix wildcard symbol `*`.
    //
    // The string properties in a query expression should use escaped quotes
    // for values that include whitespace to prevent unexpected behavior.
    //
    // Some example queries are:
    //
    // * Query `display_name=Th*` returns accounts whose display_name
    // starts with "Th"
    // * Query `display_name=\\"Test String\\"` returns groups with
    // display names that include both "Test" and "String"
    string query = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListGroupsResponse {
    // The field name should match the noun "group" in the method name.  There
    // will be a maximum number of items returned based on the page_size field
    // in the request
    repeated Group groups = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list
    string next_page_token = 2;
}

message GetGroupRequest {
    string id = 1;

    // Optional. Used to specify a subset of fields that should be
    // returned by a get operation or modified by an update operation.
    google.protobuf.FieldMask field_mask = 2;
}

message CreateGroupRequest {
    // The group id to use for this group
    string id = 1;

    // The account resource to create
    Group group = 2;
}

message UpdateGroupRequest {
    // The group resource which replaces the resource on the server
    Group group = 1;

    // The update mask applies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;
  }

message DeleteGroupRequest {
    string id = 1;
}

message AddMemberRequest {
    // The account id to add
    string id = 1;
}

message RemoveMemberRequest {
    // The account id to remove
    // TODO id in the body indt in the url? not necessary ... use empty?
    string id = 1;
}

message ListMembersRequest {
    uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

    // Optional. A pagination token returned from a previous call to `Get`
    // that indicates from where search should continue
    string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

    // Optional. Used to specify a subset of fields that should be
    // returned by a get operation or modified by an update operation.
    google.protobuf.FieldMask field_mask = 3;

    // Optional. Search criteria used to select the groups to return.
    // If no search criteria is specified then all groups will be
    // returned
    //
    // TODO update query language
    // Query expressions can be used to restrict results based upon
    // the account properties where the operators `=`, `NOT`, `AND` and `OR`
    // can be used along with the suffix wildcard symbol `*`.
    //
    // The string properties in a query expression should use escaped quotes
    // for values that include whitespace to prevent unexpected behavior.
    //
    // Some example queries are:
    //
    // * Query `display_name=Th*` returns accounts whose display_name
    // starts with "Th"
    // * Query `display_name=\\"Test String\\"` returns groups with
    // display names that include both "Test" and "String"
    string query = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListMembersResponse {
    // The field name should match the noun "members" in the method name.  There
    // will be a maximum number of items returned based on the page_size field
    // in the request
    repeated Account members = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list
    string next_page_token = 2;
}

message Group {

    // Note that field numbers in the range 1 through 15 take one byte to encode, including the field number and the field's type

    // The unique identifier for the account.
    // Key. Not nullable. Non reassignable. Read-only.
    string id = 1;

    // The name displayed in places where spaces are allowed.
    // POSIX does not allow whitespace in goup names, so we use `groupname` there
    // Corresponds to LDAP:
    // - ponixaccount MUST cn
    // - displayname
    string display_name = 2;

    // The shorthand groupname, used for display in POSIX systems
    // Corresponds to LDAP:
    // - groupofnames MUST cn
    // - (AD) Group MAY samaccountname (limited to 20 chars)
    // Not nullable. Reassignable.
    string groupname = 3;

    // The numeric group id. Used for exposing the group using ldap to POSIX systems
    // Corresponds to LDAP:
    // - posixgroup MUST gidnumber
    // Not nullable.
    int64 gid = 4;

    // A description, useful for resource groups
    // Corresponds to LDAP:
    // - posixgroup MAY description
    string description = 5;

    // groupofnames MUST/MAY member
    repeated Account members = 6;

    // Field numbers in the range 16 through 2047 take two bytes. So you should reserve the field numbers 1 through 15 for very frequently occurring message elements. Remember to leave some room for frequently occurring elements that might be added in the future.

}
